    

node ('slave_1') {
        
    parameters {
        string(name: 'INSTANCE_NAME', defaultValue: 'aidemo2')
        string(name: 'RDS_DB_ENGINE', defaultValue: 'postgres')
        string(name: 'RDS_SIZE', defaultValue: '5')
        string(name: 'RDS_INSTANCE_TYPE', defaultValue: 'db.t2.micro')
        string(name: 'AVAILABILITY_ZONE', defaultValue: 'us-east-1d')
        string(name: 'RDS_BACKUP_RETENTION', defaultValue: '0')
        string(name: 'DB_NAME', defaultValue: 'auradb')
        string(name: 'DB_USER', defaultValue: 'aura')
        string(name: 'DB_PASSWORD', defaultValue: 'mysecretpassword')
    }
    stage('Create RDS') {
		try {    
		    sh "/usr/bin/aws rds create-db-instance --db-instance-identifier ${params.INSTANCE_NAME} --engine ${params.RDS_DB_ENGINE} --allocated-storage ${params.RDS_SIZE} --db-instance-class ${params.RDS_INSTANCE_TYPE} --db-name ${params.DB_NAME} --master-username ${params.DB_USER} --master-user-password ${params.DB_PASSWORD} --availability-zone ${params.AVAILABILITY_ZONE} --backup-retention-period ${params.RDS_BACKUP_RETENTION}"
			sh "while [[  `/usr/bin/aws rds describe-db-instances --db-instance-identifier ${params.INSTANCE_NAME} | grep \"available\" | grep \"DBInstanceStatus\" | cut -d':' -f2 | tr -d '\", '` != \"available\"  ]]; do sleep 10; done"
			sh "echo DB_HOST=`/usr/bin/aws rds describe-db-instances --db-instance-identifier ${params.INSTANCE_NAME} | grep \"Address\" | cut -d':' -f2 | tr -d '\", '`"
		} catch (err) {
		    echo "Caught: ${err}"
            currentBuild.result = 'SUCCESS'
          }
    }
}